"""update relationships

Revision ID: 19bb38433aec
Revises: 9d08720e602f
Create Date: 2020-09-24 13:20:31.519882

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '19bb38433aec'
down_revision = '9d08720e602f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_applies_employee_id', table_name='applies')
    op.drop_index('ix_applies_job_id', table_name='applies')
    op.drop_constraint('employees_user_id_fkey', 'employees', type_='foreignkey')
    op.drop_column('employees', 'user_id')
    op.drop_index('ix_employers_user_id', table_name='employers')
    op.drop_constraint('employers_user_id_fkey', 'employers', type_='foreignkey')
    op.drop_column('employers', 'user_id')
    op.alter_column('job_tags', 'job_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('job_tags', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_job_tags_id', table_name='job_tags')
    op.drop_index('ix_job_tags_job_id', table_name='job_tags')
    op.drop_index('ix_job_tags_tag_id', table_name='job_tags')
    op.drop_column('job_tags', 'created_at')
    op.drop_column('job_tags', 'id')
    op.drop_column('job_tags', 'updated_at')
    op.add_column('jobs', sa.Column('employer_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'jobs', 'employers', ['employer_id'], ['id'])
    op.add_column('users', sa.Column('employee_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('employer_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'employers', ['employer_id'], ['id'])
    op.create_foreign_key(None, 'users', 'employees', ['employee_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'employer_id')
    op.drop_column('users', 'employee_id')
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_column('jobs', 'employer_id')
    op.add_column('job_tags', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('job_tags', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('job_tags', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.create_index('ix_job_tags_tag_id', 'job_tags', ['tag_id'], unique=False)
    op.create_index('ix_job_tags_job_id', 'job_tags', ['job_id'], unique=False)
    op.create_index('ix_job_tags_id', 'job_tags', ['id'], unique=False)
    op.alter_column('job_tags', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('job_tags', 'job_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('employers', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('employers_user_id_fkey', 'employers', 'users', ['user_id'], ['id'])
    op.create_index('ix_employers_user_id', 'employers', ['user_id'], unique=False)
    op.add_column('employees', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('employees_user_id_fkey', 'employees', 'users', ['user_id'], ['id'])
    op.create_index('ix_applies_job_id', 'applies', ['job_id'], unique=False)
    op.create_index('ix_applies_employee_id', 'applies', ['employee_id'], unique=False)
    # ### end Alembic commands ###
